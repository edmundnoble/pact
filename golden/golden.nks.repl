(env-keys ["key"])
(env-data {"k": {"keys":["key"], "pred":"keys-all" }})

(begin-tx)
(module ezfree G (defcap G () true) (defun ALLOW () true))

(define-namespace 'free (create-user-guard (ALLOW)) (create-user-guard (ALLOW)))
(commit-tx)

(begin-tx)
(namespace 'free)

(define-keyset "free.k1" (read-keyset 'k))

(module nks "free.k1"
  (defschema sch col:integer)
  (deftable tbl:{sch})

  (defun insertTbl (a i)
    (insert tbl a { 'col: i }))

  (defun updateTbl (a i)
     (update tbl a { 'col: i}))

  (defun weirdUpdateTbl (a i)
    (update tbl a { 'col: 0})
    (update tbl a { 'col: i}))

  (defun readTbl ()
    (sort (map (at "col")
    (select tbl (constantly true)))))

  (defpact dopact (n)
    (step { 'name: n, 'value: 1 })
    (step { 'name: n, 'value: 2 }))
)
(create-table tbl)
(readTbl)

(insertTbl "a" 1)
(commit-tx)

(begin-tx)
(free.nks.readTbl)
(commit-tx)
